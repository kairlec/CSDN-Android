import tem.csdn.compose.jetchat.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jetbrains.kotlin.kapt"
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "tem.csdn.compose.jetchat"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters 'armeabi'//, 'x86', 'armeabi-v7a', 'arm64-v8a'
        }
    }

    signingConfigs {
        // We use a bundled debug keystore, to allow debug builds from CI to be upgradable
        debug {
            storeFile rootProject.file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }

        release {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
        viewBinding true

        // Disable unused AGP features
        buildConfig false
        aidl false
        renderScript false
        resValues false
        shaders false
    }

    composeOptions {
        kotlinCompilerExtensionVersion Libs.AndroidX.Compose.version
    }

    packagingOptions {
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
}

dependencies {
//    implementation Libs.Landscapist.fresco

    implementation Libs.disklrucache
    implementation Libs.tiny

    implementation Libs.Ktor.serialization
    implementation Libs.Ktor.android
    implementation Libs.Ktor.logging
    implementation Libs.Ktor.cio
    //implementation Libs.Ktor.okhttp
    //implementation Libs.Ktor.okhttp_interceptor
    implementation Libs.Ktor.websockets
    implementation Libs.Ktor.jackson

    implementation Libs.Kotlin.reflect
    implementation Libs.Kotlin.stdlib
    implementation Libs.Kotlin.stdlib_jdk8
    implementation Libs.Kotlin.common
    implementation Libs.Coroutines.android

    implementation Libs.AndroidX.Ads.identifier
    implementation Libs.AndroidX.Activity.activityCompose
    implementation Libs.AndroidX.coreKtx
    implementation Libs.AndroidX.appcompat
    implementation Libs.AndroidX.startup
    implementation Libs.AndroidX.Lifecycle.livedata
    implementation Libs.AndroidX.Lifecycle.viewModelCompose
    implementation Libs.AndroidX.Navigation.fragment
    implementation Libs.AndroidX.Navigation.uiKtx
    implementation Libs.material

    implementation Libs.AndroidX.Compose.layout
    implementation Libs.AndroidX.Compose.material
    implementation Libs.AndroidX.Compose.materialIconsExtended
    implementation Libs.AndroidX.Compose.tooling
    implementation Libs.AndroidX.Compose.uiUtil
    implementation Libs.AndroidX.Compose.runtime
    implementation Libs.AndroidX.Compose.runtimeLivedata
    implementation Libs.AndroidX.Compose.viewBinding

    implementation Libs.Accompanist.insets
//    implementation Libs.Accompanist.glide
    //implementation Libs.Accompanist.glide_okhttp3

    implementation Libs.AndroidX.Room.runtime
    implementation Libs.AndroidX.Room.ktx
    implementation Libs.AndroidX.Room.testing
    kapt Libs.AndroidX.Room.kapt

    androidTestImplementation Libs.junit
    androidTestImplementation Libs.AndroidX.Test.core
    androidTestImplementation Libs.AndroidX.Test.espressoCore
    androidTestImplementation Libs.AndroidX.Test.rules
    androidTestImplementation Libs.AndroidX.Test.Ext.junit
    androidTestImplementation Libs.AndroidX.Compose.uiTest

    // androidx.test is forcing JUnit, 4.12. This forces it to use 4.13
    configurations.configureEach {
        resolutionStrategy {
            force Libs.junit
        }
    }
}
